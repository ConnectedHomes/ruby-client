#!/usr/bin/env ruby

#     Copyright 2015 Wavefront Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
#    limitations under the License.

require 'wavefront/client'
require 'slop'
require 'pp'
require 'json'

@opts = Slop.parse(strict: true) do
  banner 'Usage: wavefront-client QUERY (OPTIONS)'
  on 'd', 'days', 'Query granularity of days'
  on 'D', 'debug', 'Enable debug mode'
  on 'm', 'minutes', 'Query granularity of minutes'
  on 'h', 'hours', 'Query granularity of hours'
  on 'H', 'host=', 'Connect to alternative cluster host', default: Wavefront::Client::DEFAULT_HOST.to_s
  on 'S', 'seconds', 'Query granularity of seconds'
  on 's', 'start=', 'Time in UNIX epoch seconds to begin the query from'
  on 't', 'token=', 'Wavefront authentication token'
  on 'e', 'end=', 'Time in UNIX epoch seconds to query to'
  on 'f', 'format=', "Output format (#{Wavefront::Client::FORMATS.join(', ')})", default: Wavefront::Client::DEFAULT_FORMAT.to_s
  on 'p', 'prefixlength=', 'The number of path elements to treat as a prefix when doing schema manipulations', default: Wavefront::Client::DEFAULT_PREFIX_LENGTH
  on 'h', 'help', 'Display this message'
end

if @opts.help?
  puts @opts
  exit 0
end

query = ARGV[0]
if @opts.minutes?
  granularity = 'm'
elsif @opts.hours?
  granularity = 'h'
elsif @opts.seconds?
  granularity = 's'
elsif @opts.days?
  granularity = 'd'
else
  puts "You must specify a granularity of either --seconds, --minutes --hours or --days. See --help for more information."
  exit 1
end

unless Wavefront::Client::FORMATS.include?(@opts[:format].to_sym)
  puts "The output format must be on of #{Wavefront::Client::FORMATS.join(', ')}"
  exit 1
end

options = Hash.new
options[:response_format] = @opts[:format].to_sym
options[:prefix_length] = @opts[:prefixlength].to_i

if @opts[:start]
  options[:start_time] = Time.at(@opts[:start].to_i)
end

if @opts[:end]
  options[:end_time] = Time.at(@opts[:end].to_i)
end

wave = Wavefront::Client.new(@opts[:token], @opts[:host], @opts[:debug])
case options[:response_format]
when :raw
  puts wave.query(query, granularity, options)
when :graphite
  puts wave.query(query, granularity, options).graphite.to_json
else
  pp wave.query(query, granularity, options)
end
